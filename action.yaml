---
name: 'Helm-lint'
description: 'Linting helm charts.'
author: 'ixxeL'
inputs:
  values-file:
    description: 'the values file used for linting and templating'
    required: false
    default: 'values.yaml'
  strict:
    description: 'fail on lint warnings'
    required: false
    default: 'true'
  working-dir:
    description: 'file to scan'
    required: false
    default: './chart/postgresql'

runs:
  using: "composite"
  steps:
    - id: helm-lint
      run: |
        set +e
        echo -e "${BLUE}[ STEP - Helm-chart linting ] > Linting Helm chart.${BLANK}"
        echo -e "${CYAN}[ INFO ] > Helm version.${BLANK}"
        helm version --short
        echo -e "${YELLOW}[ EXECUTING ] > Checking helm chart ${{ inputs.working-dir }}.${BLANK}"
        if [[ -d ${{ inputs.working-dir }} ]]
        then
          echo -e "${GREEN}[ CHECK SUCCESS ] > Directory exists, proceeding linting.${BLANK}"
        else
          echo -e "${RED}[ CHECK ERROR ] > Directory doesn't exist, canceling linting.${BLANK}"
          exit 1
        fi

        if [[ -f ${{ inputs.working-dir }}/Chart.yaml ]]
        then
          echo -e "${CYAN}[ INFO ] > Chart.yaml file detected. Here is the file${BLANK}"
          yq e ${{ inputs.working-dir }}/Chart.yaml -C
          CHART_NAME=$(yq e '.name' ${{ inputs.working-dir }}/Chart.yaml)
          CHART_VERSION=$(yq e '.version' ${{ inputs.working-dir }}/Chart.yaml)
          CHART_APP_VERSION=$(yq e '.appVersion' ${{ inputs.working-dir }}/Chart.yaml)
          echo -e "${CYAN}[ INFO ] > The chart [[ ${CHART_NAME} ]] has version --> [[ ${CHART_VERSION} ]] and appVersion --> [[ ${CHART_APP_VERSION} ]]${BLANK}"
        else
          echo -e "${PURPLE}[ WARNING ] > Chart.yaml file NOT detected.${BLANK}"
        fi

        echo -e "${YELLOW}[ EXECUTING ] > CHecking Helm linting on chart ${CHART_NAME}.${BLANK}"
        helm lint ${{ inputs.working-dir }} --with-subcharts \
                                            --values=${{ inputs.working-dir }}/${{ inputs.values-file }} \
                                            --strict=${{ inputs.strict }}
        if [[ $? = 0 ]]
        then
          echo ::set-output name=CHART_NAME::${CHART_NAME}
          echo ::set-output name=CHART_VERSION::${CHART_VERSION}
          echo ::set-output name=CHART_APP_VERSION::${CHART_APP_VERSION}
          echo -e "${GREEN}[ CHECK SUCCESS ] > Helm Lint succeeded without any error.${BLANK}"
        else
          echo -e "${PURPLE}[ CHECK ERROR ] > Helm Lint didn't succeed, please review your helm chart.${BLANK}"
          exit 1
        fi
      shell: bash
      env:
        RED: \033[1;31m
        GREEN: \033[1;32m
        YELLOW: \033[1;33m
        BLUE: \033[1;34m
        PURPLE: \033[1;35m
        CYAN: \033[1;36m
        BLANK: \033[0m